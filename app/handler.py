from aiogram import Router, F, Bot
from aiogram.types import Message, CallbackQuery, BotCommandScopeDefault
from aiogram.filters import CommandStart
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext

from datetime import datetime as dt

import app.keyboard as kb

router = Router()


class Register(StatesGroup):
    id = State()
    username_tg = State()
    name = State()
    phone = State()


@router.message(CommandStart())
async def command_start_handler(message: Message, state: FSMContext, bot: Bot):
    await state.clear()
    # –†–∞–∑–Ω–æ–µ —Å—Å–æ–±—â–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–∞–ª–∏—á–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å id
    await message.answer("–ü—Ä–∏–≤–µ—Ç, –Ø –º–∏–Ω–∏-–∏–≥—Ä–∞ –æ—Ç –ú–¢–°! üëã\n–°–∫–æ—Ä–µ–µ –¥–∞–≤–∞–π –∏–≥—Ä–∞—Ç—å!")
    await message.answer("–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è —Å–∫–æ—Ä–µ–µ!", reply_markup=kb.start_register)


@router.callback_query(F.data == 'start_register')
async def register_start_handler(callback: CallbackQuery, state: FSMContext):
    await state.set_state(Register.name)
    await callback.message.edit_reply_markup(reply_markup=None)
    await callback.message.answer("–í–≤–µ–¥–∏ —Å–≤–æ–µ –∏–º—è")


@router.message(Register.name)
async def register_name(message: Message, state: FSMContext):
    await state.update_data(name=message.text)
    await state.update_data(id=message.from_user.id)
    await state.update_data(username_th=message.from_user.username)
    await state.set_state(Register.phone)
    await message.answer("–í–≤–µ–¥–∏ —Å–≤–æ–µ –∏–º—è")


@router.message(Register.phone)
async def register_phone(message: Message, state: FSMContext):
    await state.update_data(phone=message.text)

    data = await state.get_data()

    await message.answer(f'–¢–µ–±—è –∑–æ–≤—É—Ç: {data['name']}\n'
                         f'–¢–µ–ª–µ—Ñ–æ–Ω: {data['phone']}',
                         reply_markup=kb.pass_register)


@router.callback_query(F.data == 'pass_register')
async def register_pass(callback: CallbackQuery, state: FSMContext, bot: Bot):
    today_now = dt.today().date()

    data = await state.get_data()

    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –±–¥
    # –†–∞–∑–≤–∏–ª–∫–∞ –¥–ª—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö –∏ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω—ã–π —Ä–µ–≥–æ–≤ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    await callback.message.answer("–¢—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω! ‚ö°Ô∏è\n",
                                      reply_markup=kb.main)
    await state.clear()


@router.callback_query(F.data == 'change_register')
async def register_change(callback: CallbackQuery, state: FSMContext):
    await state.set_state(Register.name)
    await callback.message.edit_reply_markup(reply_markup=None)
    await callback.message.answer("–í–≤–µ–¥–∏ —Ç–≤–æ–µ –∏–º—è")
