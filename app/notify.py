from aiogram import Router, F, Bot
from aiogram.types import Message, CallbackQuery, BotCommandScopeDefault
from aiogram.filters import CommandStart
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton

from datetime import datetime as dt
from database.db import Database

import app.keyboard as kb

router_notify = Router()
database = Database('None')


@router_notify.message(F.text == '–û–ø–æ–≤–µ—â–µ–Ω–∏—è –∏ –ê–∫—Ü–∏–∏')
async def profile(message: Message, bot: Bot, state: FSMContext):
    await state.clear()

    is_sub = database.get_notify(message.from_user.id)[0][0]

    notify = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text=f'–†–∞—Å—Å—ã–ª–∫–∞ - üö´' if not is_sub else '–†–∞—Å—Å—ã–ª–∫–∞ - ‚úÖ', callback_data='notify_ac')]])

    await message.answer("–ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É –∏ –ø–æ–ª—É—á–∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π —Å–∫–∏–Ω.\n"
                         "–ù–µ –∑–∞–±—É–¥—å –ø—Ä–æ –∞–∫—Ü–∏–∏, —Ç–∞–º —á–∞—Å—Ç–æ –∫—É–ø–æ–Ω—ã –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –¥–Ω–∏ —Å–µ—Ä–≤–∏—Å–∞.",
                         reply_markup=notify)


@router_notify.callback_query(F.data == 'notify_ac')
async def register_change(callback: CallbackQuery, state: FSMContext):

    is_sub = database.get_notify(callback.from_user.id)[0][0]

    notify = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text=f'–†–∞—Å—Å—ã–ª–∫–∞ - üö´' if is_sub else '–†–∞—Å—Å—ã–ª–∫–∞ - ‚úÖ', callback_data='notify_ac')]])

    await callback.message.edit_reply_markup(
        reply_markup=notify
    )

    database.new_notify(callback.from_user.id, not is_sub)

    await callback.message.answer("–°—Ç–∞—Ç—É—Å —Ä–∞—Å—Å—ã–ª–∫–∏ –∏–∑–º–µ–Ω–µ–Ω")


